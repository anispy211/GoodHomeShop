////  ProductDetailViewController.m//  Good Home Shop////  Created by Aniruddha  on 16/03/14.//  Copyright (c) 2014 Aniruddha. All rights reserved.//#import "ProductDetailViewController.h"#import "CartModelManger.h"#import "Cart.h"@interface ProductDetailViewController (){    NSArray * productListArray;        int currentIndex;}@end@implementation ProductDetailViewController- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil productList:(NSArray *)productArray{    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];    if (self) {        // Custom initialization        productListArray = productArray;    }    return self;}- (void)viewDidLoad{    [super viewDidLoad];        // Do any additional setup after loading the view from its nib.        // AddToCart button : Right bar Button item    UIBarButtonItem * addToCart = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"addToCart.png"] style:UIBarButtonItemStylePlain target:self action:@selector(addToCartButtonAction)];    self.navigationItem.rightBarButtonItem = addToCart;                if ([productListArray count]>1) {        [_nextButton setHidden:NO];   // Un-hide next button intially    }        currentIndex = 0;    [self reloadDataWithIndex:currentIndex];    }#pragma mark - Reload View Data for current Index method- (void)reloadDataWithIndex:(int)index{    NSDictionary * dict = [productListArray objectAtIndex:index];        NSString * imageName = [dict valueForKey:@"Image"];    imageName = [imageName stringByAppendingString:@".jpg"];        NSString * price = [dict valueForKey:@"Price"];    NSString * description = [dict valueForKey:@"Name"];        [_productImageView setImage:[UIImage imageNamed:imageName]];    _pricelabel.text = [NSString stringWithFormat:@" Price  : %@ /- Rupees ",price];    _descripttionLabel.text = [NSString stringWithFormat:@" Name : %@",description] ;}#pragma mark - Button Action- (IBAction)nextPageButtonAction:(UIButton *)sender{           sender.tag != 0 ? currentIndex++ :currentIndex--;            switch (currentIndex) {                    case 0:            [_prevButton setHidden:YES];            break;                  case 1:            [_prevButton setHidden:NO];            [_nextButton setHidden:NO];                        break;                                default:            break;    }            if (currentIndex == [productListArray count]-1)        [_nextButton setHidden:YES];        [self reloadDataWithIndex:currentIndex];    }- (void) addToCartButtonAction{        UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@"Add to cart" message:@"Specify number of item " delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"Ok", nil];                                   [alert setAlertViewStyle:UIAlertViewStylePlainTextInput];    [[alert textFieldAtIndex:0] setKeyboardType:UIKeyboardTypeNumberPad];    [alert show];    }- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{    if (buttonIndex == 1)    {                NSString * myString = [alertView textFieldAtIndex:0].text;        if ([myString isEqualToString:@""] || [myString intValue] == 0) {                        UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@"Please enter valid positive number" message:nil delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];            [alert show];                        return;        }                if ([myString integerValue]> 99) {                        UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@"Max Limit Exceeded" message:@"Please re-enter value less than 40" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];            [alert show];                        return;                    }                        int myInt = [myString intValue];                      CartModelManger * manager = [CartModelManger sharedInstance];                NSDictionary * dict = [productListArray objectAtIndex:currentIndex];        NSMutableDictionary * dataDict = [[NSMutableDictionary alloc] initWithDictionary:dict];        [dataDict setValue:_prodCategorey forKey:@"ProductCategory"];        [manager addEntrytocartForitem:dict withQuanity:myInt];            }}- (void)didReceiveMemoryWarning{    [super didReceiveMemoryWarning];    // Dispose of any resources that can be recreated.}@end